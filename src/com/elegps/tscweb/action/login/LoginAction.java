/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.elegps.tscweb.action.login;


import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.elegps.tscweb.action.base.BaseAction;
import com.elegps.tscweb.comm.HRAddress;
import com.elegps.tscweb.comm.MD5;
import com.elegps.tscweb.form.LoginForm;
import com.elegps.tscweb.model.TbAgentInfo;
import com.elegps.tscweb.model.TbMenuInfo;
import com.elegps.tscweb.model.TbRoleMenuInfo;
import com.elegps.tscweb.model.TbRoleUserInfo;
import com.elegps.tscweb.model.TbUserInfo;
import com.elegps.tscweb.model.TbUserLog;

/** 
 * MyEclipse Struts
 * Creation date: 10-11-2008
 * 
 * XDoclet definition:
 * @struts.action path="/login" name="LoginForm" input="/login.jsp" scope="request" validate="true"
 */
public class LoginAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		 
		LoginForm loginform = (LoginForm) form;// TODO Auto-generated method stub
		TbUserInfo userInfo=loginmanager.getUser(loginform.getUser_name(),md5.str2MD5(loginform.getPassword()));
		HttpSession session = request.getSession(true);
		session.setAttribute("user", userInfo);
		if(userInfo!=null){
			TbRoleUserInfo roleUserInfo= loginmanager.getUserRole(userInfo);
			if(roleUserInfo==null ||roleUserInfo.equals("")){
				request.setAttribute("msg","该用户没有分配角色，请管理员为您添加角色！");
				return mapping.findForward("error");
			}
			List<TbRoleMenuInfo> roleMenuInfos=loginmanager.getRoleMenu(roleUserInfo);
			if(roleMenuInfos==null ||roleMenuInfos.size()==0){
				request.setAttribute("msg","该用户没有分配权限（菜单）,请管理员为您添加权限");
				return mapping.findForward("error");
			}
			
			TbAgentInfo a = agentmanger.getTbAgentinfo_byagentid(userInfo.getAgent_Id().toString());
			
			//取得用户菜单信息
			List<TbMenuInfo> menuInfos=loginmanager.getMenu(roleMenuInfos);

			//用户角色对应所有菜单的集合list
			request.getSession().setAttribute("menu", menuInfos);	
			
			request.getSession().setAttribute("uId", userInfo.getUserId());
			request.getSession().setAttribute("users",userInfo.getUserName());
			
			/**liuqing-2015-02-10 14:30:09**/
			request.getSession().setAttribute("agentId", userInfo.getAgent_Id());
			/**wanglei  **/
			//登录用户角色ID
			request.getSession().setAttribute("roleId", roleUserInfo.getRoleSid());
			request.getSession().setAttribute("epId", userInfo.getEp_Id());
			request.getSession().setAttribute("aPId", a.getAgent_PId());
			
			//记录操作日志
			TbUserLog userLog=new TbUserLog();
			userLog.setUserId(userInfo.getUserId());
			userLog.setlDate(new Date());
			userLog.setlAddress(HRAddress.getIpAddr(request));
			userLog.setlType(0);
			userLog.setlContent("登录系统");
			logManager.save(userLog);
			//运行扣费监听器
//			 if(!Deduct.isrun){
//				   Deduct.isrun=true;
//				   Thread deduct = null;
//				   deduct = new Thread(new Deduct());
//				   deduct.start();
//			   }  
		}else{
			//返回login页面并提示错误
			request.setAttribute("msg","请正确输入您的用户名和密码！");
			return mapping.findForward("error");
		}
//		request.setAttribute("msg","OK");
//		return mapping.findForward("error");
		return mapping.findForward("sucess");
	}
}